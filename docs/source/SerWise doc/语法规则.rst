语法规则
##############


基本概念
======================


* 指令(command): 指令是serWise语句的最核心部分，SerWise提供了下边几个基本指令  
    * ``speak``
    * ``listen``
    * ``set``

* 参数(Parameters): 参数指定了serWise执行语句，为command了提供了执行对象，参数可以划分为如下几种类型:
    * ``字符串常量``: 由双引号包裹的字符串，双引号中字符不限，字符串常量双引号中的值及其存储的内容
    * ``字符串标识符``: 由$开头，剩下字符至少包含一个字符或下划线的标识符，每个字符串标识符对应一个字符串，可以通过set设置，存储用户输入或从数据库中读取
    * ``字符串表达式``: 由字符串常量和标识符组成，任意两个常量/标识符由“+”符号链接，返回所有子项按顺序连接后的字符串

* 语句(Syntax): serWise由指令和参数组成，指令于参数间用':'分割，参数间用','分割
    *  **speak语句:** ``speak : string`` 一个参数，参数类型为任意字符串表达式，作用为输出字符串表达式
    *  **listen语句:** ``listen : $var`` 一个参数，参数类型为标识符，读取用户输入并将该字符串标识符对应输入内容
    *  **set语句:** ``set : $var, string`` 需要两个参数，第一个参数类型为标识符，第二个为任意字符串表达式，将标识符对应位字符串表达式的
    * serWise脚本中，语句间的分隔符为换行符，即一行只能存在一个语句，无缩进要求

* 注释(comment): 注释是为脚本编写者提供的代码标注功能，serWise支持在所有的 **语句** 后以'#'符号为标识进行代码注释， **注意: serWise不支持单行注释**

    正确标注示例:

    .. code:: 
        
        set: $welcome, "你好" # 将$welcome 对应为问候语
        listen: $name # 从用户处获取其姓名，并将$name对应为其姓名
        speak: "welcome" + $name # 向用户问候


    错误标注示例:

    .. code:: c++

        # 将$welcome 对应位问候语
        set: $welcome, "你好"  

.. note::

    ``speak`` 与 ``listen`` 语句可能有更多参数，请参见 :doc:`解释器配置 <更多配置>` 



