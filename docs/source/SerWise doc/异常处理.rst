脚本错误报告
##########################################

serWise解释器针对脚本运行错误有完整的处理规则，在体系上分为三类错误:

1. syntax error
2. complie error
3. running error

同时serWise提供了错误回溯功能，在错误发生时，serWise会打印错误发生的程序运行路径

.. only:: html

    .. figure:: images/error.png
      :width: 600
      :align: center

      异常trace打印示例


syntax error
------------------------

+----------------------+----------------------+----------------------+
| 异常信息             | 错误内容             | 建议解决方案         |
+======================+======================+======================+
| unkown_command       | 未知指令             | 检查语               |
|                      |                      | 句格式，是否正确使用 |
|                      |                      | 分隔符，检查指令拼写 |
+----------------------+----------------------+----------------------+
| parameters number    | 指                   | 检查指令是否使用错   |
| error                | 令对应的参数个数错误 | 误，检查参数个数，检 |
|                      |                      | 查是否加入了未知字符 |
+----------------------+----------------------+----------------------+
| parameters type      | 指                   | 检查指令是否使       |
| error                | 令对应的参数类型错误 | 用错误，检查参数使用 |
+----------------------+----------------------+----------------------+


compile error
----------------------

+----------------------+----------------------+----------------------+
| 异常信息             | 错误内容             | 建议解决方案         |
+======================+======================+======================+
| Step and Stepover do | step模块声明错误     | 检查step指令和       |
| not match            |                      | stepover指令是否匹配 |
+----------------------+----------------------+----------------------+
| Nested step          | 嵌套step声明         | 修                   |
| declarations are not |                      | 改编写逻辑，serwise  |
| allowed              |                      | 的step模块为全局共享 |
+----------------------+----------------------+----------------------+
| brach without switch | branch指令           | 检查代码逻辑         |
|                      | 使用未紧跟switch指令 |                      |
+----------------------+----------------------+----------------------+


running_error
---------------------
+----------------------+----------------------+----------------------+
| 异常信息             | 错误内容             | 建议解决方案         |
+======================+======================+======================+
| unKown step          | 即将切换             | 检                   |
|                      | 到一个未声明的分支中 | 查step名声明是否正确 |
+----------------------+----------------------+----------------------+
| expression calculate | 字符串表达式计算出错 | **检                 |
| failed               |                      | 查是否使用了未声明的 |
|                      |                      | 字符串标识符**\ ，检 |
|                      |                      | 查表达式是否符合规范 |
+----------------------+----------------------+----------------------+
| switch setting       | switch指令执行出错   | 检查代码逻           |
| failed               |                      | 辑与参数传递是否正确 |
+----------------------+----------------------+----------------------+
| speak failed         | speak指令执行出错    | 检查参数             |
|                      |                      | 传递，若使用了拓展包 |
|                      |                      | ，请联系相关开发人员 |
+----------------------+----------------------+----------------------+
| branch command       | branch指令执行出错   | 检查匹配字符串的正确 |
| execute failed       |                      | 传递，若使用了拓展包 |
|                      |                      | ，请联系相关开发人员 |
+----------------------+----------------------+----------------------+
| goto command execute | goto指令执行出错     | 检查代码逻辑         |
| failed               |                      | ，检查是否出现死循环 |
+----------------------+----------------------+----------------------+
| listen command       | listen指令执行出错   | 检查参数             |
| failed               |                      | 传递，若使用了拓展包 |
|                      |                      | ，请联系相关开发人员 |
+----------------------+----------------------+----------------------+
| set command failed   | set指令执行出错      | 检                   |
|                      |                      | 查代码逻辑与参数传递 |
+----------------------+----------------------+----------------------+
| import file failed,  | import指令执行出错   | 检查目标文件路       |
| please check the     |                      | 径以及文件内代码问题 |
| path                 |                      |                      |
+----------------------+----------------------+----------------------+


调试帮助
--------------

在svl运行后，解释器均会在根目录下创建 ``log_user`` 及 ``log_core`` 两个文件夹， 
``log_user`` 存放了所有的运行日志，错误报告也将打印在其中
``log_core`` 存放了内核的运行日志，如需查看调试请参照 :doc:`API Doc <D:\homework\DSL\docs\source\core_doc\index.rst>`